<template>
	<view>
		<cu-custom bgColor="bg-red" :isBack="true"><block slot="backText">返回</block><block slot="content">信息搜索</block></cu-custom>
		<view class="cu-bar bg-white search fixed" :style="[{top:CustomBar + 'px'}]">
			<view class="search-form radius">
				<text class="cuIcon-search"></text>
				<input type="text" v-model="search" placeholder="输入搜索的关键词" confirm-type="search"></input>
			</view>
			<view class="action">
				<button class="cu-btn bg-red radius" @tap="searchHandle()">搜索</button>
			</view>
		</view>
		<scroll-view scroll-y :style="[{height:'calc(100vh - '+ CustomBar + 'px - 50px)'}]">
			<view class="cu-list menu sm-border">
				<view class="cu-item" :class="clickIndex == index?'bg-gray':''" v-for="(item,index) in list" :key="index" @tap="clickHandle(item)">
					<view class="content">
						<text>{{item.label}}</text>
					</view>
				</view>
			</view>
		</scroll-view>
	</view>
</template>

<script>
    import * as API from '@/api/${pathName}'
	export default {
		data() {
			return {
				CustomBar: this.CustomBar,
				list: [],
				clickIndex:null,
				search:''
			};
		},
		onLoad(options) {
			this.dataHandle(this.search)
		},
		methods: {
			clickHandle(item){
				var pages = getCurrentPages();
				var currPage = pages[pages.length - 1]; //当前页面
				var prevPage = pages[pages.length - 2]; //上一个页面
				//直接调用上一个页面的setData()方法，把数据存到上一个页面中去
				prevPage.setData({
					selectData:item
				})
				 uni.navigateBack();
			},
			dataHandle(name){
				let _this = this
				let param = {
					name:name
				};
				API.select(param).then( res => {
					if(res.code == 0){
						this.list = res.data
					}
				}).catch( err => {});
			},
			searchHandle(){//模糊搜索
				this.dataHandle(this.search)
			}
		}
	}
</script>

<style>
	page {
		padding-top: 100upx;
	}
</style>
